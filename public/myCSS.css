/*scares away bad guys*/
* {padding:0;margin:0;}

/*prevents scrollbars from popping up due to size adjustments made from centering*/
html,body,.activecontainer{overflow:hidden;}

#activecontainer{
  position:absolute;
  top: 1%; /* (+) offset by 1x AMOUNT*/
  left: 1%;
  /*transform: translate(-50%, -50%); */
  display:inline-block;
  height:100%;
  max-height:100%;
  min-height:100% !important;
  max-width:98%;
  min-width:98% !important;

  background-color:black;/*visual dev*/
}

#dashboard {
  display:flex;
/*height: 1024px; as specified in your original pen.
  width: 1024px;
*/
  min-width:100%;
  width: 100vmin;
  min-height:100%;
  min-height:98vmin; /* (-) offset by 2x AMOUNT*/
  height: 100%;
  height: 98vmin; /* (-) offset by 2X AMOUNT*/
  background-color:purple;/*visual dev*/
}

/*These two rules govern offset needed for whichever construct you choose to use first. In this example, only the .row is active, but if you chose to build the structure using cols (items 1,4,5 in col a, etc.) then the second rule would handle the same offset. Offset is 1x AMOUNT*/
#dashboard >.row{ padding:1vmin 0; }
#dashboard>.col { padding:0 1vmin; }

.row, .col{display:flex;}
.row{
  flex-direction: row;
  background-color:black;
}
.col{
  flex-direction:column;
  background-color:green;
}

.f1{flex:1;}
.f2{flex:2;}

.child{
  display: flex;
  flex:1;
  margin: 1vmin; /* <--- AMOUNT*/
  width:auto;
  height: 100%;

  /*CONTENT: TEXT*/
  font-weight: bold;
  font-size: 2em;
  text-align: center;
  color: white;

  background-color: grey;

  /*FOR DISPLAYING CONTENT CENTERED*/
  display: flex;
  justify-content: center;
  flex-direction: column;
  text-align: center;
}

/*UNCOMMENT THIS TO BEAUTIFY COLORS*/
body,#activecontainer,#dashboard,.row,.col{
  background-color:#293C4A;
}

pre {
 box-shadow: inset 0px 0px 5px black;
 height: 200px;
 overflow-y: auto
}
